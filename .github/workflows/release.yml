name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Create tarball
        run: |
          npm pack
          mv *.tgz bedrock-kb-retrieval-mcp-server-${{ github.ref_name }}.tgz

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract changelog for this version
            awk -v ver="${{ github.ref_name }}" '
              /^## / {
                if (found) exit
                if ($0 ~ ver) { found=1; next }
              }
              found && !/^## / { print }
            ' CHANGELOG.md > release_notes.txt
          else
            echo "Release ${{ github.ref_name }}" > release_notes.txt
            echo "" >> release_notes.txt
            echo "See commit history for changes." >> release_notes.txt
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bedrock-kb-retrieval-mcp-server-${{ github.ref_name }}.tgz
          body_path: release_notes.txt
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}

  npm-publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: ${{ !contains(github.ref_name, '-') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}